var re
var ne
var crypto = require('crypto');
var $, Y = new Uint8Array(16);
$ = crypto.getRandomValues
var X = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;

var Z = function (e) {
  return "string" == typeof e && X.test(e)
}
var ee = [
  "00",
  "01",
  "02",
  "03",
  "04",
  "05",
  "06",
  "07",
  "08",
  "09",
  "0a",
  "0b",
  "0c",
  "0d",
  "0e",
  "0f",
  "10",
  "11",
  "12",
  "13",
  "14",
  "15",
  "16",
  "17",
  "18",
  "19",
  "1a",
  "1b",
  "1c",
  "1d",
  "1e",
  "1f",
  "20",
  "21",
  "22",
  "23",
  "24",
  "25",
  "26",
  "27",
  "28",
  "29",
  "2a",
  "2b",
  "2c",
  "2d",
  "2e",
  "2f",
  "30",
  "31",
  "32",
  "33",
  "34",
  "35",
  "36",
  "37",
  "38",
  "39",
  "3a",
  "3b",
  "3c",
  "3d",
  "3e",
  "3f",
  "40",
  "41",
  "42",
  "43",
  "44",
  "45",
  "46",
  "47",
  "48",
  "49",
  "4a",
  "4b",
  "4c",
  "4d",
  "4e",
  "4f",
  "50",
  "51",
  "52",
  "53",
  "54",
  "55",
  "56",
  "57",
  "58",
  "59",
  "5a",
  "5b",
  "5c",
  "5d",
  "5e",
  "5f",
  "60",
  "61",
  "62",
  "63",
  "64",
  "65",
  "66",
  "67",
  "68",
  "69",
  "6a",
  "6b",
  "6c",
  "6d",
  "6e",
  "6f",
  "70",
  "71",
  "72",
  "73",
  "74",
  "75",
  "76",
  "77",
  "78",
  "79",
  "7a",
  "7b",
  "7c",
  "7d",
  "7e",
  "7f",
  "80",
  "81",
  "82",
  "83",
  "84",
  "85",
  "86",
  "87",
  "88",
  "89",
  "8a",
  "8b",
  "8c",
  "8d",
  "8e",
  "8f",
  "90",
  "91",
  "92",
  "93",
  "94",
  "95",
  "96",
  "97",
  "98",
  "99",
  "9a",
  "9b",
  "9c",
  "9d",
  "9e",
  "9f",
  "a0",
  "a1",
  "a2",
  "a3",
  "a4",
  "a5",
  "a6",
  "a7",
  "a8",
  "a9",
  "aa",
  "ab",
  "ac",
  "ad",
  "ae",
  "af",
  "b0",
  "b1",
  "b2",
  "b3",
  "b4",
  "b5",
  "b6",
  "b7",
  "b8",
  "b9",
  "ba",
  "bb",
  "bc",
  "bd",
  "be",
  "bf",
  "c0",
  "c1",
  "c2",
  "c3",
  "c4",
  "c5",
  "c6",
  "c7",
  "c8",
  "c9",
  "ca",
  "cb",
  "cc",
  "cd",
  "ce",
  "cf",
  "d0",
  "d1",
  "d2",
  "d3",
  "d4",
  "d5",
  "d6",
  "d7",
  "d8",
  "d9",
  "da",
  "db",
  "dc",
  "dd",
  "de",
  "df",
  "e0",
  "e1",
  "e2",
  "e3",
  "e4",
  "e5",
  "e6",
  "e7",
  "e8",
  "e9",
  "ea",
  "eb",
  "ec",
  "ed",
  "ee",
  "ef",
  "f0",
  "f1",
  "f2",
  "f3",
  "f4",
  "f5",
  "f6",
  "f7",
  "f8",
  "f9",
  "fa",
  "fb",
  "fc",
  "fd",
  "fe",
  "ff"
]
var re, ne, oe = function (e) {
  var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
    , r = (ee[e[t + 0]] + ee[e[t + 1]] + ee[e[t + 2]] + ee[e[t + 3]] + "-" + ee[e[t + 4]] + ee[e[t + 5]] + "-" + ee[e[t + 6]] + ee[e[t + 7]] + "-" + ee[e[t + 8]] + ee[e[t + 9]] + "-" + ee[e[t + 10]] + ee[e[t + 11]] + ee[e[t + 12]] + ee[e[t + 13]] + ee[e[t + 14]] + ee[e[t + 15]]).toLowerCase();
  if (!Z(r))
    throw TypeError("Stringified UUID is invalid");
  return r
}

function K() {
  return ($(Y))
}
var ae = 0
var ie = 0
var ce = function (e, t, r) {
  var n = t && r || 0
    , o = t || new Array(16)
    , i = (e = e || {}).node || re
    , a = void 0 !== e.clockseq ? e.clockseq : ne;
  if (null == i || null == a) {
    var c = e.random || (e.rng || K)();
    null == i && (i = re = [1 | c[0], c[1], c[2], c[3], c[4], c[5]]),
      null == a && (a = ne = 16383 & (c[6] << 8 | c[7]))
  }
  var u = void 0 !== e.msecs ? e.msecs : Date.now()
    , s = void 0 !== e.nsecs ? e.nsecs : ae + 1
    , l = u - ie + (s - ae) / 1e4;
  if (l < 0 && void 0 === e.clockseq && (a = a + 1 & 16383),
    (l < 0 || u > ie) && void 0 === e.nsecs && (s = 0),
    s >= 1e4)
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  ie = u,
    ae = s,
    ne = a;
  var f = (1e4 * (268435455 & (u += 122192928e5)) + s) % 4294967296;
  o[n++] = f >>> 24 & 255,
    o[n++] = f >>> 16 & 255,
    o[n++] = f >>> 8 & 255,
    o[n++] = 255 & f;
  var p = u / 4294967296 * 1e4 & 268435455;
  o[n++] = p >>> 8 & 255,
    o[n++] = 255 & p,
    o[n++] = p >>> 24 & 15 | 16,
    o[n++] = p >>> 16 & 255,
    o[n++] = a >>> 8 | 128,
    o[n++] = 255 & a;
  for (var d = 0; d < 6; ++d)
    o[n + d] = i[d];
  return t || oe(o)
};
var Dr = ce();
var sessionId = Dr;


function getSession() {
  Y = new Uint8Array(16);
  return ce()
}


module.exports = getSession;